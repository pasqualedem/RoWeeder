experiment:
  name: RowWeed # name of the logger platform experiment
  group: Measure # name of group of experiments for the logger platform
  search: grid # search strategy to use
  task: segmentation

parameters:
  # Contains the parameters to build the grid.
  # Each value should be a dict or a list
  seed: &seed [42] # random seed to set

  tracker:
    ignored_files: ["*.bin,*.safetensors"]
    test_image_log_frequency: [10]

  model:
    name: [segformer] # path to model class or model name contained in EzDL or super-gradients
    params:
      input_channels: &input_channels [['R', 'G', 'B']]

  dataset: # parameters depending on the class you defined for the dataset
    preprocess:
      mean: [[0.485, 0.456, 0.406]]
      std: [[0.229, 0.224, 0.225]]
    root: [dataset/patches/512] # path to the dataset
    channels: [["R", "G", "B"]]
    test_fields: [["003"]]
    return_path: [True]

  dataloader:
    num_workers: [0]
    batch_size: [2]

  test_metrics:
    JaccardIndex: &metric_params
      num_classes: [3]
      task: [multiclass]
      average: [macro]
    F1Score: *metric_params

other_grids: